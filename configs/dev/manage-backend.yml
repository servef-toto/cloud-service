# 日志配置
logging:
  level:
    root: info
    com.cloud: debug # 级别控制，com.cloud下
  file: logs/${spring.application.name}.log

spring:
  # 数据源配置
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://rm-wz9yy0528x91z1iqdco.mysql.rds.aliyuncs.com:3306/luu_manage_backend?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
    username: root
    password: root0319@
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-test-query: SELECT 1

  # rabbit配置
  rabbitmq:
    host: local.rabbitmq.com
    port: 5672
    username: guest
    password: guest
    virtual-host: /

  # 邮件信息配置
  mail:
    default-encoding: UTF-8
    host: smtp.qq.com # smtp.qq.com QQ邮箱host | smtp.exmail.qq.com 腾讯企业邮箱host
    username: 1073435406@qq.com
    password: yagnxwrkwmskbdgj   #spring.mail.password这个值不是QQ邮箱的密码，而是QQ邮箱给第三方客户端邮箱生成的授权码。具体要登录QQ邮箱，点击设置，找到SMTP服务：
#    protocol: 465
    test-connection: false
    properties:
      mail.smtp.auth: true # 设置是否需要认证，如果为true,那么用户名和密码就必须的，
                           # 如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。

  # mvc 的配置
  mvc:
    servlet:
      load-on-startup: 1 # servlet的启动优先级
  # mvc aop 切面编程的配置
  aop:
    proxy-target-class: true #proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。
                            #如果proxy-target-class 属性值被设置为true，那么基于类的代理将起作用（这时需要cglib库）。
                            #如果proxy-target-class属值被设置为false或者这个属性被省略，那么标准的JDK 基于接口的代理将起作用

  # zipkin 链路追踪的配置-HTTP的方式收集，也可以使用消息中间件收集，具体可以百度
  zipkin:
    base-url: http://localhost:9411  # zipkin服务端地址
    enabled: true # enabled=false则可以关闭跟踪功能，如果在使用rabbit等消息队列发送时，则可以关闭
    sender:
      type: web  # 表示以http的形式上传日志到zipkin服务

#mybatis 配置
mybatis:
  type-aliases-package: com.cloud.backend.model,com.cloud.model.mail #别名包映射地址
  mapper-locations: classpath:/mybatis-mappers/* #映射文件扫描地址
  configuration:
    mapUnderscoreToCamelCase: true


# swagger 信息自定义配置，具体需要参数可以看com.cloud.backend.config.SwaggerConfig
my:
  swagger:
    groupName: "manage-backend接口文档"
    title: "manage-backend接口文档"
    version: "1.0"
    contact:
      name: "luu-这个ID叫夏天"
      url: ""
      email: "1073435406@qq.com"


## 认证鉴权的配置，可以获取用户的信息和权限信息
#security.oauth2.resource.user-info-uri用于获取当前token的用户信息，
#配置security.oauth2.client的相关信息以及clientId、client-secret等信息要和service-auth中的配置一一对应。
security:
  oauth2:
    resource:
      user-info-uri: http://local.gateway.com:8080/api-o/user-me
      prefer-token-info: false
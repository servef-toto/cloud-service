logging:
  level:
    root: info
    com.cloud: debug
  file: logs/${spring.application.name}.log
spring:
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://local.mysql.com:3306/cloud?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false
    username: root
    password: root
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      connection-test-query: SELECT 1
  rabbitmq:
    host: local.rabbitmq.com
    port: 5672
    username: guest
    password: guest
    virtual-host: /
  # 上传文件大小限制
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
  mvc:
    servlet:
      load-on-startup: 1
  # proxy-target-class属性值决定是基于接口的还是基于类的代理被创建。
  #如果proxy-target-class 属性值被设置为true，那么基于类的代理将起作用（这时需要cglib库）。
  #如果proxy-target-class属值被设置为false或者这个属性被省略，那么标准的JDK 基于接口的代理。
  #如果不给出 proxy-target-class，就按 proxy-target-class=“false”对待，也即是按JDK proxy来处理的。
  aop:
    proxy-target-class: true
  zipkin:
    base-url: http://localhost:9411
    enabled: true
    sender:
      type: web
mybatis:
  type-aliases-package: com.cloud.file.model
  mapper-locations: classpath:/mybatis-mappers/*
  configuration:
    mapUnderscoreToCamelCase: true
security:
  oauth2:
    resource:
      user-info-uri: http://local.gateway.com:8080/api-o/user-me # 配置userinfo的url地址
      prefer-token-info: false # 是否使用token info，默认为true

# 自定义配置-本地存储文件
#path是上传文件存储根路径
#prefix是前缀
#urlPrefix是域名加前缀
#如d:/localFile/aaa.png用url访问就是  http://api.gateway.com:8080/api-f/statics/aaa.png
file:
  local:
    path: d:/localFile
    prefix: /statics
    urlPrefix: http://api.gateway.com:8080/api-f${file.local.prefix}
  # 如要上传图片到阿里云，这里需要配置你的阿里云对象存储OSS相关配置
  aliyun:
    endpoint: xxx
    accessKeyId: xxx
    accessKeySecret: xxx
    bucketName: xxx
    domain: https://xxx
spring:
  application:
    name: monitor-server

server:
  port: 9001 # 这里配置成0，启动时，项目会随机一个端口号
#  servlet:
#    context-path: /api-b/

eureka:
  client:
    serviceUrl:
      defaultZone: http://local.register.com:8761/eureka/ # 可以设置为多注册中心
    registry-fetch-interval-seconds: 5  #表示eureka client间隔多久去拉取服务注册信息，默认为30秒
  instance:
    lease-expiration-duration-in-seconds: 60 #表示注册中心至上一次收到client的心跳之后，等待下一次心跳的超时时间，
                        #在这个时间内若没收到下一次心跳，则将移除该instance。默认为90秒，该值至少应该大于leaseRenewalIntervalInSeconds
    lease-renewal-interval-in-seconds: 20 #表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，
                        #server端没有收到client的心跳，则将摘除该instance。除此之外，默认30秒
    prefer-ip-address: true #使用 IP 地址进行服务注册。默认情况下，Eureka 使用 hostname 进行服务注册，以及服务信息的显示，那如果我们使用 IP 地址的方式则配置prefer-ip-address: true
    instance-id: ${spring.application.name}:${random.int}  # 因为我们是随机端口号，我们这里用了随机数字来显示
    ip-address: 106.12.158.157  #设置外网IP号
    non-secure-port: ${server.port} #设置外网端口号,设置不安全端口号
    non-secure-port-enabled: true #开启不安全通信的端口，就是使用http进行通信


#监控跟踪管理actuator，可以自定义endpoints具体可以百度
management:
  endpoints:
    web:
      exposure:
        include: "*"    #暴露actuator的所有端点
  endpoint:
    health:
      show-details: always #health endpoint是否必须显示全部细节。默认情况下, /actuator/health 是公开的，并且不显示细节